!function(e){function r(i){if(n[i])return n[i].exports;var t=n[i]={i:i,l:!1,exports:{}};return e[i].call(t.exports,t,t.exports,r),t.l=!0,t.exports}var n={};r.m=e,r.c=n,r.i=function(e){return e},r.d=function(e,n,i){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(r.s=14)}([function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0});var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}();r.Serial=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM serials WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forTitle",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM serials WHERE title = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM serials ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()},t):[])})})}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.season_id&&(n.seasonID=r.season_id),r.story&&(n.story=r.story),r.serial&&(n.serial=r.serial),r.title&&(n.title=r.title),r.production_code&&(n.productionCode=r.production_code),n}},{key:"restv1URL",value:function(e){return"/v1/serials/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}()},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0}),r.Actor=void 0;var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=n(2);r.Actor=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"restv1URL",value:function(e){return"/v1/actors/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.name&&(n.name=r.name),n}},{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM actors WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM actors ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()}):[])})})}},{key:"forName",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM actors WHERE name = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"doctors",value:function(e,r){return new Promise(function(n,i){e.all("SELECT doctors.* FROM doctors WHERE doctors.primary_actor = ? ORDER BY doctors.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return o.Doctor.fromRow(e).addHATEAOS()},r):[])})})}}]),e}()},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0}),r.Doctor=void 0;var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=n(0),s=n(1);r.Doctor=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM doctors WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forIncarnation",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM doctors WHERE incarnation = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forPrimaryActorID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM doctors WHERE primary_actor = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"actors",value:function(e,r){return new Promise(function(n,i){e.all("SELECT actors.* FROM actors INNER JOIN doctors ON actors.id = doctors.primary_actor WHERE doctors.id = ? ORDER BY actors.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return s.Actor.fromRow(e).addHATEAOS()},r):[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM doctors ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()},t):[])})})}},{key:"forSerialID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT doctors.* FROM serials INNER JOIN serials_doctors ON serials.id = serials_doctors.serial_id INNER JOIN doctors ON serials_doctors.doctor_id = doctors.id WHERE serials.id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"serials",value:function(e,r){return new Promise(function(n,i){e.all("SELECT serials.* FROM serials INNER JOIN serials_doctors ON serials.id = serials_doctors.serial_id INNER JOIN doctors ON serials_doctors.doctor_id = doctors.id WHERE doctors.id = ? ORDER BY serials.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return o.Serial.fromRow(e).addHATEAOS()},r):[])})})}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.incarnation&&(n.incarnation=r.incarnation),r.primary_actor&&(n.primaryActorID=r.primary_actor),n}},{key:"restv1URL",value:function(e){return"/v1/doctors/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}()},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0}),r.Director=void 0;var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=n(0);r.Director=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM directors WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM directors ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()}):[])})})}},{key:"forName",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM directors WHERE name = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forSerialID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT directors.* FROM serials INNER JOIN serials_directors ON serials.id = serials_directors.serial_id INNER JOIN directors ON serials_directors.director_id = directors.id WHERE serials.id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"serials",value:function(e,r){return new Promise(function(n,i){e.all("SELECT serials.* FROM serials INNER JOIN serials_directors ON serials.id = serials_directors.serial_id INNER JOIN directors ON serials_directors.director_id = directors.id WHERE directors.id = ? ORDER BY serials.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return o.Serial.fromRow(e).addHATEAOS()},r):[])})})}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.name&&(n.name=r.name),n}},{key:"restv1URL",value:function(e){return"/v1/directors/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}()},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0});var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=r.Episode=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM episodes WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM episodes ORDER BY serial_id, episode_order",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()},t):[])})})}},{key:"forSerialID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT episodes.* FROM episodes WHERE episodes.serial_id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"forTitle",value:function(r,n){return new Promise(function(i,t){r.all("SELECT episodes.* FROM episodes WHERE episodes.title = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"forOriginalAirDate",value:function(r,n){return new Promise(function(i,t){r.all("SELECT episodes.* FROM episodes WHERE episodes.original_air_date = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"forMissingStatus",value:function(r,n){return new Promise(function(i,t){r.all("SELECT episodes.* FROM episodes WHERE episodes.missing = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"restv1URL",value:function(e){return"/v1/episodes/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}();o.fromRow=function(e){var r=new o;return e.id&&(r.id=e.id),e.title&&(r.title=e.title),e.serial_id&&(r.serialID=e.serial_id),e.episode_order&&(r.episodeOrder=e.episode_order),e.original_air_date&&(r.originalAirDate=e.original_air_date),e.runtime&&(r.runtime=e.runtime),e.uk_viewers_mm&&(r.ukViewersMM=e.uk_viewers_mm),e.appreciation_index&&(r.appreciationIndex=e.appreciation_index),e.missing&&(r.missing=1===e.missing),e.recreated&&(r.recreated=1===e.recreated),r}},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0}),r.Season=void 0;var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=n(0);r.Season=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM seasons WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forName",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM seasons WHERE name = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"serials",value:function(e,r){return new Promise(function(n,i){e.all("SELECT serials.* FROM serials WHERE serials.season_id = ? ORDER BY serials.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return o.Serial.fromRow(e).addHATEAOS()},r):[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM seasons ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()}):[])})})}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.name&&(n.name=r.name),n}},{key:"restv1URL",value:function(e){return"/v1/seasons/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}()},function(e,r,n){"use strict";function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0}),r.Writer=void 0;var t=function(){function e(e,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(r,n,i){return n&&e(r.prototype,n),i&&e(r,i),r}}(),o=n(0);r.Writer=function(){function e(){i(this,e)}return t(e,[{key:"addHATEAOS",value:function(){return e.addHATEAOSTo(this)}}],[{key:"forID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM writers WHERE id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"all",value:function(r){return new Promise(function(n,i){r.all("SELECT * FROM writers ORDER BY id",[],function(r,t,o){r?i({error:{message:"Error while performing Query."}}):n(t&&t.length?t.map(function(r){return e.fromRow(r).addHATEAOS()},t):[])})})}},{key:"forName",value:function(r,n){return new Promise(function(i,t){r.all("SELECT * FROM writers WHERE name = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?e.fromRow(n[0]).addHATEAOS():[])})})}},{key:"forSerialID",value:function(r,n){return new Promise(function(i,t){r.all("SELECT writers.* FROM serials INNER JOIN serials_writers ON serials.id = serials_writers.serial_id INNER JOIN writers ON serials_writers.writer_id = writers.id WHERE serials.id = ?",[n],function(r,n,o){r?t({error:{message:"Error while performing Query."}}):i(n&&n.length?n.map(function(r){return e.fromRow(r).addHATEAOS()},n):[])})})}},{key:"serials",value:function(e,r){return new Promise(function(n,i){e.all("SELECT serials.* FROM serials INNER JOIN serials_writers ON serials.id = serials_writers.serial_id INNER JOIN writers ON serials_writers.writer_id = writers.id WHERE writers.id = ? ORDER BY serials.id",[r],function(e,r,t){e?i({error:{message:"Error while performing Query."}}):n(r&&r.length?r.map(function(e){return o.Serial.fromRow(e).addHATEAOS()},r):[])})})}},{key:"fromRow",value:function(r){var n=new e;return r.id&&(n.id=r.id),r.name&&(n.name=r.name),n}},{key:"restv1URL",value:function(e){return"/v1/writers/"+e}},{key:"addHATEAOSTo",value:function(r){return r.links=[],r.links.push({rel:"self",href:e.restv1URL(r.id)}),r}}]),e}()},function(e,r,n){"use strict";function i(e){return e.originalUrl.match(/^\/graphql\??/)?"GET"===e.method?"GraphiQL":"GraphQL":"REST"}function t(e,r){e.use(function(e,n,t){e.timingData={start:Date.now()},n.on("finish",function(){(0,s.default)(r,{https:!0}).pageview(e.originalUrl).event("Request Type",i(e)).timing("API request","Complete request",Date.now()-e.timingData.start).send()}),t()})}Object.defineProperty(r,"__esModule",{value:!0}),r.default=t;var o=n(17),s=function(e){return e&&e.__esModule?e:{default:e}}(o)},function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){e.use(function(e,r,n){if("/favicon.ico"===e.url)return r.status(200),r.type("image/x-icon"),void r.send("");n()})}},function(e,r,n){"use strict";function i(){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];return new Promise(function(e,n){Promise.all(r.filter(function(e){return null!==e})).then(function(r){return e(h(r)?r[0]:null)},function(e){return n(e)})})}Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e,r){var n=new t.GraphQLObjectType({name:"Actor",description:"An actor",fields:function(){return{id:{type:t.GraphQLID,description:"Actor ID"},name:{type:t.GraphQLString,description:"Actor name"},doctors:{type:new t.GraphQLList(o),description:"Doctors this actor has portrayed",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),d.Actor.doctors(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),o=new t.GraphQLObjectType({name:"Doctor",description:"A single incarnation of The Doctor",fields:function(){return{id:{type:t.GraphQLID,description:"Doctor ID"},incarnation:{type:t.GraphQLString,description:"Name of this incarnation of The Doctor"},primaryActor:{type:n,description:"The actor who usually portrayed this incarnation of The Doctor",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),d.Actor.forID(r,e.primaryActorID).then(function(e){return n(e)},function(e){return t(e)})})}},serials:{type:new t.GraphQLList(g),description:"Serials",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),a.Doctor.serials(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),m=new t.GraphQLObjectType({name:"Director",description:"The director of an episode",fields:function(){return{id:{type:t.GraphQLID,description:"Director ID"},name:{type:t.GraphQLString,description:"Director name"},serials:{type:new t.GraphQLList(g),description:"Serials",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),u.Director.serials(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),h=new t.GraphQLObjectType({name:"Writer",description:"The writer of an episode",fields:function(){return{id:{type:t.GraphQLID,description:"Writer ID"},name:{type:t.GraphQLString,description:"Writer name"},serials:{type:new t.GraphQLList(g),description:"Serials",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),c.Writer.serials(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),E=new t.GraphQLObjectType({name:"Episode",description:"An episode of a Serial, or a single episode of the show",fields:function(){return{id:{type:t.GraphQLID,description:"Episode ID"},title:{type:t.GraphQLString,description:"Episode title"},serial:{type:g,description:"Serial this Episode appears in",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),f.Serial.forID(r,e.serialID).then(function(e){return n(e)},function(e){return t(e)})})}},episodeOrder:{type:t.GraphQLInt,description:"Episode order within a serial"},originalAirDate:{type:t.GraphQLString,description:"Original air date (yyyy-mm-dd)"},runtime:{type:t.GraphQLString,description:"Original running time (hh:mm)"},ukViewersMM:{type:t.GraphQLFloat,description:"UK viewers (millions) of the first showing"},appreciationIndex:{type:t.GraphQLInt,description:"Appreciation Index of the first showing"},missing:{type:t.GraphQLBoolean,description:"Whether the episode is currently missing"},recreated:{type:t.GraphQLBoolean,description:"Whether a missing episode has been officially re-created (such as the animated re-creations)"}}}}),y=new t.GraphQLObjectType({name:"Season",description:"A season of the show",fields:function(){return{id:{type:t.GraphQLID,description:"Season ID"},name:{type:t.GraphQLString,description:"Season name"},serials:{type:new t.GraphQLList(g),description:"Serials",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),l.Season.serials(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),g=new t.GraphQLObjectType({name:"Serial",description:"A serial or single episode",fields:function(){return{id:{type:t.GraphQLID,description:"Serial ID"},season:{type:y,description:"Season",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),l.Season.forID(r,e.seasonID).then(function(e){return n(e)},function(e){return t(e)})})}},story:{type:t.GraphQLInt,description:"Story number"},serial:{type:t.GraphQLInt,description:"Serial episode number"},title:{type:t.GraphQLString,description:"Serial title"},productionCode:{type:t.GraphQLString,description:"Serial production code"},doctors:{type:new t.GraphQLList(o),description:"Doctor(s) who appeared in this episode",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),a.Doctor.forSerialID(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}},directors:{type:new t.GraphQLList(m),description:"Directors of this serial",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),u.Director.forSerialID(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}},writers:{type:new t.GraphQLList(h),description:"Writers of this serial",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),c.Writer.forSerialID(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}},episodes:{type:new t.GraphQLList(E),description:"Episodes in this serial",resolve:function(e,n,i){return new Promise(function(n,t){i.incrementResolverCount(),p.Episode.forSerialID(r,e.id).then(function(e){return n(e)},function(e){return t(e)})})}}}}}),v=new t.GraphQLSchema({query:new t.GraphQLObjectType({name:"RootQueryType",fields:{actor:{type:n,args:{id:{description:"Actor ID",type:t.GraphQLID},name:{description:"Name of this actor",type:t.GraphQLString}},resolve:function(e,n){var t=n.id,o=n.name;return i(t?d.Actor.forID(r,t):null,o?d.Actor.forName(r,o):null)}},doctor:{type:o,args:{id:{description:"Doctor ID",type:t.GraphQLID},incarnation:{description:"Name of this incarnation of The Doctor",type:t.GraphQLString},primaryActorID:{description:"The actor who usually portrayed this incarnation of The Doctor",type:t.GraphQLID}},resolve:function(e,n){var t=n.id,o=n.incarnation,s=n.primaryActorID;return i(t?a.Doctor.forID(r,t):null,o?a.Doctor.forIncarnation(r,o):null,s?a.Doctor.forPrimaryActorID(r,s):null)}},director:{type:m,args:{id:{description:"Director ID",type:t.GraphQLID},name:{description:"Director name",type:t.GraphQLString}},resolve:function(e,n){var t=n.id,o=n.name;return i(t?u.Director.forID(r,t):null,o?u.Director.forName(r,o):null)}},writer:{type:h,args:{id:{description:"Writer ID",type:t.GraphQLID},name:{description:"Writer name",type:t.GraphQLString}},resolve:function(e,n){var t=n.id,o=n.name;return i(t?c.Writer.forID(r,t):null,o?c.Writer.forName(r,o):null)}},season:{type:y,args:{id:{description:"Season ID",type:t.GraphQLID},name:{description:"Season name",type:t.GraphQLString}},resolve:function(e,n){var t=n.id,o=n.name;return i(t?l.Season.forID(r,t):null,o?l.Season.forName(r,o):null)}},episode:{type:E,args:{id:{description:"Episode ID",type:t.GraphQLID},title:{description:"Episode Title",type:t.GraphQLString},originalAirDate:{description:"Original air date (yyyy-mm-dd)",type:t.GraphQLString},missing:{description:"If the episode is currently missing",type:t.GraphQLBoolean}},resolve:function(e,n){var t=n.id,o=n.title,s=n.originalAirDate,a=n.missing;return i(t?p.Episode.forID(r,t):null,o?p.Episode.forTitle(r,o):null,s?p.Episode.forOriginalAirDate(r,s):null,a?p.Episode.forMissingStatus(r,a):null)}},serial:{type:g,args:{id:{description:"Serial ID",type:t.GraphQLID},title:{description:"Serial title",type:t.GraphQLString}},resolve:function(e,n){var t=n.id,o=n.title;return i(t?f.Serial.forID(r,t):null,o?f.Serial.forTitle(r,o):null)}}}})});e.use(function(e,r,n){e.resolverCount=0,e.incrementResolverCount=function(){if(++this.resolverCount>2e3)throw"Cost limiting is in effect. Query complexity was too high."},n()}),e.use("/graphql",(0,s.default)({schema:v,graphiql:!0}))};var t=n(16),o=n(15),s=function(e){return e&&e.__esModule?e:{default:e}}(o),a=n(2),u=n(3),c=n(6),l=n(5),f=n(0),d=n(1),p=n(4),m=function(e,r){return void 0!==e.id&&void 0!==r.id&&e.id===r.id},h=function(e){return e.length>0&&e.reduce(function(e,r,n,i){return e&&m(r,i[0])})}},function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e,r){function n(e,n){i.Doctor.all(r).then(l(n),f(n))}function d(e,n){i.Doctor.forID(r,e.params.id).then(l(n),f(n))}function p(e,n){i.Doctor.serials(r,e.params.id).then(l(n),f(n))}function m(e,n){i.Doctor.actors(r,e.params.id).then(l(n),f(n))}function h(e,n){t.Serial.all(r).then(l(n),f(n))}function E(e,n){t.Serial.forID(r,e.params.id).then(l(n),f(n))}function y(e,n){i.Doctor.forSerialID(r,e.params.id).then(l(n),f(n))}function g(e,n){s.Director.forSerialID(r,e.params.id).then(l(n),f(n))}function v(e,n){o.Writer.forSerialID(r,e.params.id).then(l(n),f(n))}function w(e,n){c.Episode.forSerialID(r,e.params.id).then(l(n),f(n))}function O(e,n){a.Season.all(r).then(l(n),f(n))}function R(e,n){a.Season.forID(r,e.params.id).then(l(n),f(n))}function S(e,n){a.Season.serials(r,e.params.id).then(l(n),f(n))}function A(e,n){s.Director.all(r).then(l(n),f(n))}function T(e,n){s.Director.forID(r,e.params.id).then(l(n),f(n))}function D(e,n){s.Director.serials(r,e.params.id).then(l(n),f(n))}function L(e,n){o.Writer.all(r).then(l(n),f(n))}function I(e,n){o.Writer.forID(r,e.params.id).then(l(n),f(n))}function Q(e,n){o.Writer.serials(r,e.params.id).then(l(n),f(n))}function _(e,n){c.Episode.all(r).then(l(n),f(n))}function k(e,n){c.Episode.forID(r,e.params.id).then(l(n),f(n))}function H(e,n){u.Actor.all(r).then(l(n),f(n))}function P(e,n){u.Actor.forID(r,e.params.id).then(l(n),f(n))}function G(e,n){u.Actor.doctors(r,e.params.id).then(l(n),f(n))}e.get("/doctors",n),e.get("/v1/doctors",n),e.get("/doctors/:id",d),e.get("/v1/doctors/:id",d),e.get("/doctors/:id/serials",p),e.get("/v1/doctors/:id/serials",p),e.get("/doctors/:id/actors",m),e.get("/v1/doctors/:id/actors",m),e.get("/serials",h),e.get("/v1/serials",h),e.get("/serials/:id",E),e.get("/v1/serials/:id",E),e.get("/serials/:id/doctors",y),e.get("/v1/serials/:id/doctors",y),e.get("/serials/:id/directors",g),e.get("/v1/serials/:id/directors",g),e.get("/serials/:id/writers",v),e.get("/v1/serials/:id/writers",v),e.get("/serials/:id/episodes",w),e.get("/v1/serials/:id/episodes",w),e.get("/seasons",O),e.get("/v1/seasons",O),e.get("/seasons/:id",R),e.get("/v1/seasons/:id",R),e.get("/seasons/:id/serials",S),e.get("/v1/seasons/:id/serials",S),e.get("/directors",A),e.get("/v1/directors",A),e.get("/directors/:id",T),e.get("/v1/directors/:id",T),e.get("/directors/:id/serials",D),e.get("/v1/directors/:id/serials",D),e.get("/writers",L),e.get("/v1/writers",L),e.get("/writers/:id",I),e.get("/v1/writers/:id",I),e.get("/writers/:id/serials",Q),e.get("/v1/writers/:id/serials",Q),e.get("/episodes",_),e.get("/v1/episodes",_),e.get("/episodes/:id",k),e.get("/v1/episodes/:id",k),e.get("/actors",H),e.get("/v1/actors",H),e.get("/actors/:id",P),e.get("/v1/actors/:id",P),e.get("/actors/:id/doctors",G),e.get("/v1/actors/:id/doctors",G)};var i=n(2),t=n(0),o=n(6),s=n(3),a=n(5),u=n(1),c=n(4),l=function(e){return function(r){e.type("json"),e.send(r)}},f=function(e){return function(r){e.status(404).send("Error")}}},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("sqlite3")},function(e,r,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var t=n(12),o=i(t),s=n(10),a=i(s),u=n(13),c=n(9),l=i(c),f=n(7),d=i(f),p=n(8),m=i(p);n(11).config();var h=new u.Database("catalogopolis-api.sqlite"),E=(0,o.default)();if(!process.env.CATALOGOPOLIS_API_UA)throw"CATALOGOPOLIS_API_UA environment variable must be set";(0,m.default)(E),(0,d.default)(E,process.env.CATALOGOPOLIS_API_UA),(0,a.default)(E,h),(0,l.default)(E,h),E.listen(process.env.CATALOGOPOLIS_API_PORT||5e3)},function(e,r){e.exports=require("express-graphql")},function(e,r){e.exports=require("graphql")},function(e,r){e.exports=require("universal-analytics")}]);